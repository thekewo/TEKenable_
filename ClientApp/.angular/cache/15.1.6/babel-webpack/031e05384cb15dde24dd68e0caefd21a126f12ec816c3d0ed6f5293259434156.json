{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.url = baseUrl;\n  }\n  submitNewsletter(user) {\n    var result = false;\n    var params = new HttpParams().set(\"email\", user.email).set(\"contactSource\", user.contactSource).set(\"contactReason\", user.contactReason);\n    this.http.post(this.url + \"user/submit\", \"\", {\n      params: params\n    }).subscribe(res => {\n      result = res;\n    }, error => {\n      console.error(error);\n      return false;\n    });\n    return false;\n  }\n  isEmailInDatabase(email) {\n    var params = new HttpParams().set(\"email\", email);\n    this.http.get(this.url + 'user/checkemail', {\n      params: params\n    }).subscribe(res => {\n      return result;\n    }, error => {\n      console.error(error);\n      return false;\n    });\n    return result;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAU7D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IACtB,IAAI,CAACE,GAAG,GAAGD,OAAO;EACpB;EAEAE,gBAAgB,CAACC,IAAU;IACzB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC1BU,GAAG,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC,CACxBD,GAAG,CAAC,eAAe,EAAEH,IAAI,CAACK,aAAa,CAAC,CACxCF,GAAG,CAAC,eAAe,EAAEH,IAAI,CAACM,aAAa,CAAC;IAE3C,IAAI,CAACV,IAAI,CAACW,IAAI,CAA4B,IAAI,CAACT,GAAG,GAAG,aAAa,EAAE,EAAE,EAAE;MAAEI,MAAM,EAAEA;IAAM,CAAE,CAAC,CAACM,SAAS,CAACC,GAAG,IAAG;MAC1GR,MAAM,GAAGQ,GAAG;IACd,CAAC,EAAEC,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,KAAK;IACd,CAAC,CAAC;IAEF,OAAO,KAAK;EACd;EAEAE,iBAAiB,CAACR,KAAa;IAC7B,IAAIF,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC1BU,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC;IACtB,IAAI,CAACR,IAAI,CAACiB,GAAG,CAA4B,IAAI,CAACf,GAAG,GAAG,iBAAiB,EAAE;MAAEI,MAAM,EAAEA;IAAM,CAAE,CAAC,CAACM,SAAS,CAACC,GAAG,IAAG;MACzG,OAAOR,MAAM;IACf,CAAC,EAAES,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,KAAK;IACd,CAAC,CAAC;IAEF,OAAOT,MAAM;EACf;;AAnCWP,WAAW;mBAAXA,WAAW,0CAGwB,UAAU;AAAA;AAH7CA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAHV;AAAM","names":["HttpParams","UserService","constructor","http","baseUrl","url","submitNewsletter","user","result","params","set","email","contactSource","contactReason","post","subscribe","res","error","console","isEmailInDatabase","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Koós Zoltán\\source\\repos\\TEKenable_Newsletter\\ClientApp\\src\\app\\shared\\services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Action } from \"rxjs/internal/scheduler/Action\";\r\nimport { User } from \"../models/user\";\r\nimport { SingleJsonResult } from \"../models/singlejsonresult\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class UserService {\r\n  private url: string;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.url = baseUrl;\r\n  }\r\n\r\n  submitNewsletter(user: User): boolean {\r\n    var result = false;\r\n    var params = new HttpParams()\r\n      .set(\"email\", user.email)\r\n      .set(\"contactSource\", user.contactSource)\r\n      .set(\"contactReason\", user.contactReason)\r\n\r\n    this.http.post<SingleJsonResult<boolean>>(this.url + \"user/submit\", \"\", { params: params }).subscribe(res => {\r\n      result = res;\r\n    }, error => {\r\n      console.error(error);\r\n      return false;\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  isEmailInDatabase(email: string): boolean {\r\n    var params = new HttpParams()\r\n      .set(\"email\", email)\r\n    this.http.get<SingleJsonResult<boolean>>(this.url + 'user/checkemail', { params: params }).subscribe(res => {\r\n      return result;\r\n    }, error => {\r\n      console.error(error);\r\n      return false;\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}