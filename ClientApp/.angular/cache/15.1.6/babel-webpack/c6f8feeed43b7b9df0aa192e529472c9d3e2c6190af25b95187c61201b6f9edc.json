{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NewsletterService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.url = baseUrl;\n  }\n  submitNewsletter(user) {\n    var params = new HttpParams().set(\"email\", user.email).set(\"contactSource\", user.contactSource).set(\"contactReason\", user.contactReason);\n    this.http.post(this.url + \"user/submit\", {\n      params\n    }).subscribe(result => {\n      this.submitResult = result;\n      console.log(this.submitResult);\n    }, error => console.error(error));\n    http.get(baseUrl + 'user/checkemail').subscribe(result => {\n      console.log(result);\n    }, error => console.error(error));\n  }\n}\nNewsletterService.ɵfac = function NewsletterService_Factory(t) {\n  return new (t || NewsletterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nNewsletterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NewsletterService,\n  factory: NewsletterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAU7D,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IACtB,IAAI,CAACE,GAAG,GAAGD,OAAO;EACpB;EAEAE,gBAAgB,CAACC,IAAU;IACzB,IAAIC,MAAM,GAAG,IAAIR,UAAU,EAAE,CAC1BS,GAAG,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC,CACxBD,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACI,aAAa,CAAC,CACxCF,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACK,aAAa,CAAC;IAE3C,IAAI,CAACT,IAAI,CAACU,IAAI,CAA2B,IAAI,CAACR,GAAG,GAAG,aAAa,EAAE;MAAEG;IAAM,CAAE,CAAC,CAACM,SAAS,CAACC,MAAM,IAAG;MAChG,IAAI,CAACC,YAAY,GAAGD,MAAM;MAC1BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,YAAY,CAAC;IAChC,CAAC,EAAEG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC;IAGjChB,IAAI,CAACiB,GAAG,CAA2BhB,OAAO,GAAG,iBAAiB,CAAC,CAACU,SAAS,CAACC,MAAM,IAAG;MACjFE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACrB,CAAC,EAAEI,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAvBWlB,iBAAiB;mBAAjBA,iBAAiB,0CAIkB,UAAU;AAAA;AAJ7CA,iBAAiB;SAAjBA,iBAAiB;EAAAoB,SAAjBpB,iBAAiB;EAAAqB,YAHhB;AAAM","names":["HttpParams","NewsletterService","constructor","http","baseUrl","url","submitNewsletter","user","params","set","email","contactSource","contactReason","post","subscribe","result","submitResult","console","log","error","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Koós Zoltán\\source\\repos\\TEKenable_Newsletter\\ClientApp\\src\\app\\shared\\services\\newsletter.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Action } from \"rxjs/internal/scheduler/Action\";\r\nimport { User } from \"../models/user\";\r\nimport { SingleJsonResult } from \"../models/singlejsonresult\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class NewsletterService {\r\n  private url: string;\r\n  private submitResult!: SingleJsonResult<string>;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.url = baseUrl;\r\n  }\r\n\r\n  submitNewsletter(user: User) {\r\n    var params = new HttpParams()\r\n      .set(\"email\", user.email)\r\n      .set(\"contactSource\", user.contactSource)\r\n      .set(\"contactReason\", user.contactReason)\r\n\r\n    this.http.post<SingleJsonResult<string>>(this.url + \"user/submit\", { params }).subscribe(result => {\r\n      this.submitResult = result;\r\n      console.log(this.submitResult);\r\n    }, error => console.error(error));\r\n\r\n\r\n    http.get<SingleJsonResult<string>>(baseUrl + 'user/checkemail').subscribe(result => {\r\n      console.log(result);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}