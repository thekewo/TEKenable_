{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.url = baseUrl;\n  }\n  submitNewsletter(user) {\n    var params = new HttpParams().set(\"email\", user.email).set(\"contactSource\", user.contactSource).set(\"contactReason\", user.contactReason);\n    return this.http.post(this.url + \"user/submit\", \"\", {\n      params: params\n    });\n  }\n  isEmailInDatabase(email) {\n    var params = new HttpParams().set(\"email\", email);\n    return this.http.get(this.url + 'user/checkemail', {\n      params: params\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAW7D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IACtB,IAAI,CAACE,GAAG,GAAGD,OAAO;EACpB;EAEAE,gBAAgB,CAACC,IAAU;IACzB,IAAIC,MAAM,GAAG,IAAIR,UAAU,EAAE,CAC1BS,GAAG,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC,CACxBD,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACI,aAAa,CAAC,CACxCF,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACK,aAAa,CAAC;IAE3C,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAA4B,IAAI,CAACR,GAAG,GAAG,aAAa,EAAE,EAAE,EAAE;MAAEG,MAAM,EAAEA;IAAM,CAAE,CAAC;EACpG;EAEAM,iBAAiB,CAACJ,KAAa;IAC7B,IAAIF,MAAM,GAAG,IAAIR,UAAU,EAAE,CAC1BS,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC;IACtB,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAA4B,IAAI,CAACV,GAAG,GAAG,iBAAiB,EAAE;MAAEG,MAAM,EAAEA;IAAM,CAAE,CAAC;EACnG;;AApBWP,WAAW;mBAAXA,WAAW,0CAGwB,UAAU;AAAA;AAH7CA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAHV;AAAM","names":["HttpParams","UserService","constructor","http","baseUrl","url","submitNewsletter","user","params","set","email","contactSource","contactReason","post","isEmailInDatabase","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Koós Zoltán\\source\\repos\\TEKenable_Newsletter\\ClientApp\\src\\app\\shared\\services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Action } from \"rxjs/internal/scheduler/Action\";\r\nimport { User } from \"../models/user\";\r\nimport { SingleJsonResult } from \"../models/singlejsonresult\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class UserService {\r\n  private url: string;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.url = baseUrl;\r\n  }\r\n\r\n  submitNewsletter(user: User): Observable<SingleJsonResult<boolean>> {\r\n    var params = new HttpParams()\r\n      .set(\"email\", user.email)\r\n      .set(\"contactSource\", user.contactSource)\r\n      .set(\"contactReason\", user.contactReason)\r\n\r\n    return this.http.post<SingleJsonResult<boolean>>(this.url + \"user/submit\", \"\", { params: params });\r\n  }\r\n\r\n  isEmailInDatabase(email: string): Observable<SingleJsonResult<boolean>> {\r\n    var params = new HttpParams()\r\n      .set(\"email\", email)\r\n    return this.http.get<SingleJsonResult<boolean>>(this.url + 'user/checkemail', { params: params });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}